name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Test and Quality Checks
  test:
    name: Test & Quality
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'

    - name: Cache Flutter dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.pub-cache
          ${{ runner.tool_cache }}/flutter
        key: flutter-${{ runner.os }}-${{ hashFiles('**/pubspec.lock') }}
        restore-keys: |
          flutter-${{ runner.os }}-

    - name: Install dependencies
      run: flutter pub get

    - name: Run Flutter analyze
      run: flutter analyze

    - name: Run Flutter format check
      run: |
        if [ "$(flutter format --dry-run --set-exit-if-changed . | wc -l)" -gt 0 ]; then
          echo "Code is not properly formatted. Run 'flutter format .' to fix."
          flutter format --dry-run --set-exit-if-changed .
          exit 1
        fi

    - name: Run tests
      run: flutter test --coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  # Android Build
  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'

    - name: Cache Flutter dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.pub-cache
          ${{ runner.tool_cache }}/flutter
        key: flutter-${{ runner.os }}-${{ hashFiles('**/pubspec.lock') }}
        restore-keys: |
          flutter-${{ runner.os }}-

    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Install dependencies
      run: flutter pub get

    - name: Create local.properties
      run: |
        echo "flutter.sdk=$FLUTTER_ROOT" > android/local.properties
        echo "sdk.dir=/usr/local/lib/android/sdk" >> android/local.properties

    - name: Build APK (Debug)
      run: flutter build apk --debug --split-per-abi

    - name: Build APK (Release)
      run: flutter build apk --release --split-per-abi

    - name: Build App Bundle (AAB)
      run: flutter build appbundle --release

    - name: Upload APK artifacts
      uses: actions/upload-artifact@v3
      with:
        name: android-apk
        path: |
          build/app/outputs/flutter-apk/*.apk
          build/app/outputs/bundle/release/*.aab

  # iOS Build (only on macOS)
  build-ios:
    name: Build iOS
    runs-on: macos-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'

    - name: Cache Flutter dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.pub-cache
          ${{ runner.tool_cache }}/flutter
        key: flutter-${{ runner.os }}-${{ hashFiles('**/pubspec.lock') }}
        restore-keys: |
          flutter-${{ runner.os }}-

    - name: Install dependencies
      run: flutter pub get

    - name: Setup Xcode
      run: sudo xcode-select -s /Applications/Xcode.app/Contents/Developer

    - name: Build iOS
      run: flutter build ios --release --no-codesign

    - name: Upload iOS artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ios-build
        path: build/ios/iphoneos/Runner.app

  # Web Build
  build-web:
    name: Build Web
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'

    - name: Cache Flutter dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.pub-cache
          ${{ runner.tool_cache }}/flutter
        key: flutter-${{ runner.os }}-${{ hashFiles('**/pubspec.lock') }}
        restore-keys: |
          flutter-${{ runner.os }}-

    - name: Install dependencies
      run: flutter pub get

    - name: Build Web
      run: flutter build web --release

    - name: Upload Web artifacts
      uses: actions/upload-artifact@v3
      with:
        name: web-build
        path: build/web

  # Deploy to Firebase Hosting (Web)
  deploy-web:
    name: Deploy to Firebase Hosting
    runs-on: ubuntu-latest
    needs: build-web
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download Web build artifacts
      uses: actions/download-artifact@v3
      with:
        name: web-build
        path: build/web

    - name: Setup Firebase CLI
      run: npm install -g firebase-tools

    - name: Deploy to Firebase Hosting
      run: |
        firebase deploy --only hosting --project ${{ secrets.FIREBASE_PROJECT_ID }}
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

  # Security Scan
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'

    - name: Install dependencies
      run: flutter pub get

    - name: Run security audit
      run: flutter pub outdated --show-all

    - name: Check for vulnerabilities
      run: |
        # Check for known security issues in dependencies
        flutter pub deps | grep -E "(http|crypto|secure)" || true

  # Performance Test
  performance-test:
    name: Performance Test
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'

    - name: Install dependencies
      run: flutter pub get

    - name: Build APK for performance testing
      run: flutter build apk --debug --target-platform android-arm64

    - name: Run performance tests
      run: |
        # Basic performance checks
        flutter test --machine > test_results.json || true
        echo "Performance test completed"
